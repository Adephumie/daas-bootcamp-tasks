Kubernetes Assessment: Please click the link to the 'daasclass23' repository provided below. 
Once you're inside, go to the 'week4-intro-to-kubernetes-part1' folder. 
Take a moment to review both assessments, and then respond to only one of them. 
However, if you wish, you can attempt both assessments. All the best!

https://bitbucket.org/daasdotng/daasclass23/src/develop/


OPTION 1

Question 1:

Objective: Create a basic Kubernetes service using NodePort.

Scenario: You have a simple web application running in a Kubernetes pod. 
Your task is to expose this application to the external world using a NodePort service.

Steps:

-Create a YAML file for a pod named "web-app-pod" running a web server container with the 
image "nginx:latest."
-Deploy the pod to the cluster.
-Create a NodePort service named "web-app-service" to expose the pod on a specific port, e.g., 31000.
-Ensure the service is accessible from outside the cluster.


Question 2:

Objective: Set resource requests and limits for a Kubernetes deployment.

Scenario: You have a Kubernetes deployment named "my-app-deployment" running a critical application. 
To ensure resource utilization, you need to configure resource requests and limits.

Steps:

-Describe the current state of the "my-app-deployment" deployment to check for any existing 
resource requests and limits.
-Modify the deployment YAML file to set resource requests for CPU to "100m" and 
memory to "128Mi" for the application containers.
-Set resource limits for CPU to "200m" and memory to "256Mi."
-Apply the changes to the deployment.
-Verify that the resources are configured correctly for the containers in the "my-app-deployment."



OPTION 2

Question 1:
You are tasked with deploying a web application in your Kubernetes cluster. 
The application consists of a frontend pod and a backend pod. 
The frontend should be accessible only within the cluster, and the backend needs to be 
accessible from outside the cluster. Create the necessary Kubernetes resources to achieve this, 
making use of ClusterIP and NodePort services. 
Additionally, ensure that these resources are organized within a dedicated 
namespace called "name-of-your-team_daasbootcamp"

Question 2:
Imagine you have a Kubernetes cluster where you are hosting multiple microservices 
within different namespaces. Each microservice requires a specific amount of CPU and memory resources. 
You need to demonstrate resource management by setting resource requests and limits for the 
pods in the "production" namespace. Choose one of the microservices 
(e.g., "frontend") and define the appropriate resource requests and limits for its pods. 
Explain the rationale behind your resource allocation decisions and how these settings impact pod behavior.